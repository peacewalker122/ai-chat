//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

// Code generated by Wire. DO NOT EDIT.

package http

import (
	"ai-chat/src/app/chat"
	"ai-chat/src/pkg/palm"
	"context"
	"os"

	"github.com/google/generative-ai-go/genai"
	"github.com/google/wire"
)

// Injectors from wire.go:

// InitializeChatHandler creates a chat handler with its dependencies.
func InitializeChatHandler(ctx context.Context) (*chat.Handler, error) {
	generativeModel := ProvidePalmClient(ctx)
	handler := ProvideChatHandler(generativeModel)
	return handler, nil
}

// wire.go:

// ProvidePalmClient creates a new palm.Client.
func ProvidePalmClient(ctx context.Context) *genai.GenerativeModel {
	apiKey := os.Getenv("PALM_API_KEY")
	return palm.NewClient(ctx, apiKey)
}

// ProvideChatHandler creates a new chat handler using a palm.Client.
func ProvideChatHandler(client *genai.GenerativeModel) *chat.Handler {
	return chat.NewHandler(client)
}

var chatSet = wire.NewSet(
	ProvidePalmClient,
	ProvideChatHandler,
)
